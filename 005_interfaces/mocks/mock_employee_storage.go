// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/JairoGLoz/senior-go-projects/senior-go-projects/005_interfaces/core (interfaces: EmployeeStorage)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	core "github.com/JairoGLoz/senior-go-projects/senior-go-projects/005_interfaces/core"
	gomock "github.com/golang/mock/gomock"
)

// MockEmployeeStorage is a mock of EmployeeStorage interface.
type MockEmployeeStorage struct {
	ctrl     *gomock.Controller
	recorder *MockEmployeeStorageMockRecorder
}

// MockEmployeeStorageMockRecorder is the mock recorder for MockEmployeeStorage.
type MockEmployeeStorageMockRecorder struct {
	mock *MockEmployeeStorage
}

// NewMockEmployeeStorage creates a new mock instance.
func NewMockEmployeeStorage(ctrl *gomock.Controller) *MockEmployeeStorage {
	mock := &MockEmployeeStorage{ctrl: ctrl}
	mock.recorder = &MockEmployeeStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEmployeeStorage) EXPECT() *MockEmployeeStorageMockRecorder {
	return m.recorder
}

// GetEmployee mocks base method.
func (m *MockEmployeeStorage) GetEmployee(arg0 string) (*core.Employee, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEmployee", arg0)
	ret0, _ := ret[0].(*core.Employee)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEmployee indicates an expected call of GetEmployee.
func (mr *MockEmployeeStorageMockRecorder) GetEmployee(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEmployee", reflect.TypeOf((*MockEmployeeStorage)(nil).GetEmployee), arg0)
}

// SaveEmployee mocks base method.
func (m *MockEmployeeStorage) SaveEmployee(arg0 *core.Employee) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveEmployee", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveEmployee indicates an expected call of SaveEmployee.
func (mr *MockEmployeeStorageMockRecorder) SaveEmployee(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveEmployee", reflect.TypeOf((*MockEmployeeStorage)(nil).SaveEmployee), arg0)
}
